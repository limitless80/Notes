<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='GDP by Country per Year_data (GDP by Country per Year_data)' inline='true' name='federated.1wciujp1fdlpas1d6u9tm1yl45e1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GDP by Country per Year_data' name='excel-direct.0ruiccu1atzxgz1fnzhbk1o1c4cf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yoge8/OneDrive/Desktop/vgsales.csv/GDP by Country per Year_data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ruiccu1atzxgz1fnzhbk1o1c4cf' name='GDP by Country per Year_data' table='[&apos;GDP by Country per Year_data$&apos;]' type='table'>
          <columns gridOrigin='A1:AC230:no:A1:AC230:0' header='yes' outcome='2'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='real' name='2000' ordinal='1' />
            <column datatype='real' name='2001' ordinal='2' />
            <column datatype='real' name='2002' ordinal='3' />
            <column datatype='real' name='2003' ordinal='4' />
            <column datatype='real' name='2004' ordinal='5' />
            <column datatype='real' name='2005' ordinal='6' />
            <column datatype='real' name='2006' ordinal='7' />
            <column datatype='real' name='2007' ordinal='8' />
            <column datatype='real' name='2008' ordinal='9' />
            <column datatype='real' name='2009' ordinal='10' />
            <column datatype='real' name='2010' ordinal='11' />
            <column datatype='real' name='2011' ordinal='12' />
            <column datatype='real' name='2012' ordinal='13' />
            <column datatype='real' name='2013' ordinal='14' />
            <column datatype='real' name='2014' ordinal='15' />
            <column datatype='real' name='2015' ordinal='16' />
            <column datatype='real' name='2016' ordinal='17' />
            <column datatype='real' name='2017' ordinal='18' />
            <column datatype='real' name='2018' ordinal='19' />
            <column datatype='real' name='2019' ordinal='20' />
            <column datatype='real' name='2020' ordinal='21' />
            <column datatype='real' name='5.2' ordinal='22' />
            <column datatype='real' name='3.3' ordinal='23' />
            <column datatype='real' name='2.4' ordinal='24' />
            <column datatype='real' name='1.7' ordinal='25' />
            <column datatype='real' name='1.7 1' ordinal='26' />
            <column datatype='real' name='1.6' ordinal='27' />
            <column datatype='real' name='1.6 1' ordinal='28' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AC230:no:A1:AC230:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2000]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2000</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2001</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2001]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2001</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2002</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2002]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2002</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2003</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2003]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2003</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2004</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2004]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2004</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2005</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2005]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2005</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2006</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2006]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2006</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2007</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2007]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2007</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2008</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2008]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2008</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2009</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2009]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2009</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2010]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2010</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2011</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2011]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2011</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2012]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2012</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2013]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2013</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2014]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2014</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2015]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2015</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2017]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2017</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2018</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2019]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2019</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2020]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2020</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>5.2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[5.2]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>5.2</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3.3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3.3]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>3.3</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2.4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2.4]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>2.4</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1.7</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1.7]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>1.7</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1.7 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1.7 1]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>1.7 1</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1.6</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1.6]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>1.6</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1.6 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1.6 1]</local-name>
            <parent-name>[GDP by Country per Year_data]</parent-name>
            <remote-alias>1.6 1</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[2006]' role='measure' type='quantitative' />
      <column datatype='real' name='[2007]' role='measure' type='quantitative' />
      <column datatype='real' name='[2008]' role='measure' type='quantitative' />
      <column datatype='real' name='[2009]' role='measure' type='quantitative' />
      <column datatype='real' name='[2010]' role='measure' type='quantitative' />
      <column datatype='real' name='[2011]' role='measure' type='quantitative' />
      <column datatype='real' name='[2012]' role='measure' type='quantitative' />
      <column datatype='real' name='[2013]' role='measure' type='quantitative' />
      <column datatype='real' name='[2014]' role='measure' type='quantitative' />
      <column datatype='real' name='[2016]' role='measure' type='quantitative' />
      <column datatype='real' name='[2017]' role='measure' type='quantitative' />
      <column datatype='real' name='[2018]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='GDP by Country per Year_data' datatype='table' name='[__tableau_internal_object_id__].[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]' role='measure' type='quantitative' />
      <column-instance column='[2010]' derivation='Avg' name='[avg:2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[2006]' derivation='Sum' name='[sum:2006:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2007]' derivation='Sum' name='[sum:2007:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2008]' derivation='Sum' name='[sum:2008:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2009]' derivation='Sum' name='[sum:2009:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2011]' derivation='Sum' name='[sum:2011:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2012]' derivation='Sum' name='[sum:2012:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2013]' derivation='Sum' name='[sum:2013:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2014]' derivation='Sum' name='[sum:2014:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2016]' derivation='Sum' name='[sum:2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2017]' derivation='Sum' name='[sum:2017:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2018]' derivation='Sum' name='[sum:2018:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/yoge8/AppData/Local/Temp/TableauTemp/#TableauTemp_1wyd6b11sh7two1gborwf1083x8n.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='12/25/2024 07:12:27 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>229</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2000</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2000]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2000</remote-alias>
              <ordinal>1</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>102</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2001</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2001]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2001</remote-alias>
              <ordinal>2</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>110</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2002</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2002]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2002</remote-alias>
              <ordinal>3</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>106</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2003</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2003]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2003</remote-alias>
              <ordinal>4</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>119</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2004</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2004]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2004</remote-alias>
              <ordinal>5</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>111</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2005</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2005]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2005</remote-alias>
              <ordinal>6</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>107</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2006</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2006]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2006</remote-alias>
              <ordinal>7</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2007</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2007]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2007</remote-alias>
              <ordinal>8</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>118</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2008</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2008]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2008</remote-alias>
              <ordinal>9</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>114</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2009</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2009]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2009</remote-alias>
              <ordinal>10</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>137</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2010</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2010]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2010</remote-alias>
              <ordinal>11</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2011</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2011]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2011</remote-alias>
              <ordinal>12</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2012</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2012]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2012</remote-alias>
              <ordinal>13</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>119</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2013</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2013]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2013</remote-alias>
              <ordinal>14</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2014</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2014]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2014</remote-alias>
              <ordinal>15</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>99</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2015</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2015]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2015</remote-alias>
              <ordinal>16</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>101</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2016</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2016]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2016</remote-alias>
              <ordinal>17</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2017</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2017]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2017</remote-alias>
              <ordinal>18</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2018</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2018]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2018</remote-alias>
              <ordinal>19</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2019</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2019]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2019</remote-alias>
              <ordinal>20</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2020</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2020]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2020</remote-alias>
              <ordinal>21</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>139</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>5.2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[5.2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>5.2</remote-alias>
              <ordinal>22</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>115</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>3.3</remote-name>
              <remote-type>5</remote-type>
              <local-name>[3.3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>3.3</remote-alias>
              <ordinal>23</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2.4</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2.4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2.4</remote-alias>
              <ordinal>24</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1.7</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1.7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1.7</remote-alias>
              <ordinal>25</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>66</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1.7 1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1.7 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1.7 1</remote-alias>
              <ordinal>26</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>67</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1.6</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1.6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1.6</remote-alias>
              <ordinal>27</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>66</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1.6 1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1.6 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1.6 1</remote-alias>
              <ordinal>28</ordinal>
              <family>GDP by Country per Year_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71</approx-count>
              <contains-null>true</contains-null>
              <object-id>[GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#00ff00'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo, Republic of&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Advanced economies&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macao SAR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China, People&apos;s Republic of&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Emerging and Developing Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Western Hemisphere (Region)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia and Pacific&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latin America and the Caribbean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia, Fed. States of&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Sudan, Republic of&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Emerging and Developing Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Asia and the Caucasus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Emerging market and developing economies&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middle East (Region)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia and New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Middle East and Central Asia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Other advanced economies&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sub-Saharan Africa (Region)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Asia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southeast Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo, Dem. Rep. of the&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Korea, Republic of&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa (Region)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Major advanced economies (G7)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pacific Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ASEAN-5&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Country&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lao P.D.R.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2016:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2009:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2008:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2013:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2011:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2014:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2007:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2018:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[avg:2010:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2010:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2006:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2017:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2012:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='GDP by Country per Year_data' id='GDP by Country per Year!data_7DB72050389F4ECDBEDCFECAB6E9196F'>
            <properties context=''>
              <relation connection='excel-direct.0ruiccu1atzxgz1fnzhbk1o1c4cf' name='GDP by Country per Year_data' table='[&apos;GDP by Country per Year_data$&apos;]' type='table'>
                <columns gridOrigin='A1:AC230:no:A1:AC230:0' header='yes' outcome='2'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='real' name='2000' ordinal='1' />
                  <column datatype='real' name='2001' ordinal='2' />
                  <column datatype='real' name='2002' ordinal='3' />
                  <column datatype='real' name='2003' ordinal='4' />
                  <column datatype='real' name='2004' ordinal='5' />
                  <column datatype='real' name='2005' ordinal='6' />
                  <column datatype='real' name='2006' ordinal='7' />
                  <column datatype='real' name='2007' ordinal='8' />
                  <column datatype='real' name='2008' ordinal='9' />
                  <column datatype='real' name='2009' ordinal='10' />
                  <column datatype='real' name='2010' ordinal='11' />
                  <column datatype='real' name='2011' ordinal='12' />
                  <column datatype='real' name='2012' ordinal='13' />
                  <column datatype='real' name='2013' ordinal='14' />
                  <column datatype='real' name='2014' ordinal='15' />
                  <column datatype='real' name='2015' ordinal='16' />
                  <column datatype='real' name='2016' ordinal='17' />
                  <column datatype='real' name='2017' ordinal='18' />
                  <column datatype='real' name='2018' ordinal='19' />
                  <column datatype='real' name='2019' ordinal='20' />
                  <column datatype='real' name='2020' ordinal='21' />
                  <column datatype='real' name='5.2' ordinal='22' />
                  <column datatype='real' name='3.3' ordinal='23' />
                  <column datatype='real' name='2.4' ordinal='24' />
                  <column datatype='real' name='1.7' ordinal='25' />
                  <column datatype='real' name='1.7 1' ordinal='26' />
                  <column datatype='real' name='1.6' ordinal='27' />
                  <column datatype='real' name='1.6 1' ordinal='28' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP by Country per Year_data (GDP by Country per Year_data)' name='federated.1wciujp1fdlpas1d6u9tm1yl45e1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wciujp1fdlpas1d6u9tm1yl45e1'>
            <column datatype='real' name='[2007]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[2007]' derivation='Sum' name='[sum:2007:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[Longitude (generated)]' field-type='quantitative' max='11999450.902660076' min='-37303024.68682602' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[Latitude (generated)]' field-type='quantitative' max='14615735.230359713' min='-11817759.555819854' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]' />
              <text column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2007:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.2413811683654785' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[Latitude (generated)]</rows>
        <cols>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1437FCA9-55EA-46F7-A681-5C144058D03F}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP by Country per Year_data (GDP by Country per Year_data)' name='federated.1wciujp1fdlpas1d6u9tm1yl45e1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wciujp1fdlpas1d6u9tm1yl45e1'>
            <column datatype='real' name='[2006]' role='measure' type='quantitative' />
            <column datatype='real' name='[2007]' role='measure' type='quantitative' />
            <column datatype='real' name='[2008]' role='measure' type='quantitative' />
            <column datatype='real' name='[2009]' role='measure' type='quantitative' />
            <column datatype='real' name='[2010]' role='measure' type='quantitative' />
            <column datatype='real' name='[2011]' role='measure' type='quantitative' />
            <column datatype='real' name='[2012]' role='measure' type='quantitative' />
            <column datatype='real' name='[2013]' role='measure' type='quantitative' />
            <column datatype='real' name='[2014]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[2006]' derivation='Sum' name='[sum:2006:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2007]' derivation='Sum' name='[sum:2007:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2008]' derivation='Sum' name='[sum:2008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2009]' derivation='Sum' name='[sum:2009:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2011]' derivation='Sum' name='[sum:2011:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2012]' derivation='Sum' name='[sum:2012:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2013]' derivation='Sum' name='[sum:2013:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2014]' derivation='Sum' name='[sum:2014:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2006:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2007:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2008:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2009:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2010:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2011:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2012:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2013:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2014:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]</column>
            <column>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[Multiple Values]</rows>
        <cols>([federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk] / [federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{99AF9B3E-2275-49F0-BF1A-89CEF2630218}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP by Country per Year_data (GDP by Country per Year_data)' name='federated.1wciujp1fdlpas1d6u9tm1yl45e1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wciujp1fdlpas1d6u9tm1yl45e1'>
            <column datatype='real' name='[2000]' role='measure' type='quantitative' />
            <column datatype='real' name='[2001]' role='measure' type='quantitative' />
            <column datatype='real' name='[2002]' role='measure' type='quantitative' />
            <column datatype='real' name='[2003]' role='measure' type='quantitative' />
            <column datatype='real' name='[2004]' role='measure' type='quantitative' />
            <column datatype='real' name='[2005]' role='measure' type='quantitative' />
            <column datatype='real' name='[2006]' role='measure' type='quantitative' />
            <column datatype='real' name='[2007]' role='measure' type='quantitative' />
            <column datatype='real' name='[2008]' role='measure' type='quantitative' />
            <column datatype='real' name='[2009]' role='measure' type='quantitative' />
            <column datatype='real' name='[2010]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[2010]' derivation='Avg' name='[avg:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[2000]' derivation='Sum' name='[sum:2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2001]' derivation='Sum' name='[sum:2001:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2002]' derivation='Sum' name='[sum:2002:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2003]' derivation='Sum' name='[sum:2003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2004]' derivation='Sum' name='[sum:2004:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2005]' derivation='Sum' name='[sum:2005:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2006]' derivation='Sum' name='[sum:2006:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2007]' derivation='Sum' name='[sum:2007:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2008]' derivation='Sum' name='[sum:2008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2009]' derivation='Sum' name='[sum:2009:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2001:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2002:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2003:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2004:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2005:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2006:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2007:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2008:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2009:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2010:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Asia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]</column>
            <column>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]' />
              <lod column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[avg:2010:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0E0457CF-214B-4DB7-AECA-76D1EF70B3DB}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP by Country per Year_data (GDP by Country per Year_data)' name='federated.1wciujp1fdlpas1d6u9tm1yl45e1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wciujp1fdlpas1d6u9tm1yl45e1'>
            <column datatype='real' name='[2016]' role='measure' type='quantitative' />
            <column datatype='real' name='[2017]' role='measure' type='quantitative' />
            <column datatype='real' name='[2018]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[2016]' derivation='Sum' name='[sum:2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2017]' derivation='Sum' name='[sum:2017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2018]' derivation='Sum' name='[sum:2018:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2016:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2017:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2018:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Costa Rica&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]</column>
            <column>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[Multiple Values]</rows>
        <cols>([federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk] / [federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{74CC3EFA-F812-4E16-9AFC-EB2B986988F1}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP by Country per Year_data (GDP by Country per Year_data)' name='federated.1wciujp1fdlpas1d6u9tm1yl45e1' />
          </datasources>
          <datasource-dependencies datasource='federated.1wciujp1fdlpas1d6u9tm1yl45e1'>
            <column datatype='real' name='[2004]' role='measure' type='quantitative' />
            <column datatype='real' name='[2005]' role='measure' type='quantitative' />
            <column datatype='real' name='[2006]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[2004]' derivation='Sum' name='[sum:2004:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2005]' derivation='Sum' name='[sum:2005:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2006]' derivation='Sum' name='[sum:2006:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2004:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2005:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2006:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2004:qk] + ([federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2005:qk] + [federated.1wciujp1fdlpas1d6u9tm1yl45e1].[sum:2006:qk]))</rows>
        <cols>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{6BE8A943-D814-446A-B3BD-E67648B13A24}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{24BE9689-21F5-4E0A-BCA6-1CE70DC7A796}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]</field>
            <field>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32DA19C3-EE4D-4A8F-A050-8420AB71DB8A}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]</field>
            <field>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A99124BB-70FE-4744-B562-B1DED7387E05}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]</field>
            <field>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6189665D-A27A-449B-A911-5CF3DF4269C3}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[:Measure Names]</field>
            <field>[federated.1wciujp1fdlpas1d6u9tm1yl45e1].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02C5EADE-5E10-47C9-A577-7683998838FE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='164' name='Sheet 3' width='164'>
      iVBORw0KGgoAAAANSUhEUgAAAKQAAACkCAYAAAAZtYVBAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAM5ElEQVR4nO2dz28bxxmGX5HmciWRDCnKiOVEEJk6kBOjcRwgAWoBsYQc0pORIOc2Ti4B
      iuRYIEAPVo69tH9CjAIu0FML5JCLC+vSBHVrKFGQxAlci4CiH4zdSiElmaJFsgd5pCW1JJez
      Mzszu9+TQ2RJXM7hwfe98+1oOdRqtVogCE2IqV4AQTghIQmtICEJrSAhCa0gIQmtICEJrSAh
      Ca0gIQmtICEJrSAhCa0gIQmtOKF6AaZRrlZRrlbwY7WKpfXVw+8xfqxW2r736Xvvo4DC4c/Z
      14XH/01hCgUUMIvZQNavOyRkD8rVKr5aW8XS+urh1zyUUHL9uhMm6yxmUUABb+PtNpmjwBCd
      9jnCKeCN7+4Iuean773v6/WsekZF0MgLubS2ihvf3xEmYCd+heykgAKu4Aou4VIo23wkhSxX
      q7jx/be48d2dtvwnA9FCOmFyhqlyRkZIJuHS2hp3FuRBppBOmJxXcTWQ95NF6IVkIl7/97+U
      vH9QQjqZx7yxVTO0QparVVy/fUtaNvSKCiEZJooZOiF1EZGhUkjGLGbxMT42QszQzCFVt2ad
      WcACiihiFrO4iZuql9MT44UkEb2zgAUMYQjzmNd282P0vexytYoPP/kryTgg85hHEUUsYEH1
      Uo5hZIWkquifEkqYw5x2bdy4Crm0tkpVUSAsX+pSLY0Rku2eP/zkb9LvrkQNVi0/wkeql2KG
      kJQVg4Fly14nkmSjvZDXb9/CO3/+E1XFgGDVUlUL11rI67dvUVVUAJPyHbwT+HtrKSTLiySj
      Wq7hGuYwF+h7aickjXT0YgELgUqplZDlahV/WPg7yagZQUqpjZBsJx3kWUXCO2xeKRsthGQy
      0k5ab0ooSR8LKReSZDQLtgOXhVIhWWYkGc1CppTKhGQyUmY0E1kbHWVC3vj+W5LRcGRIqURI
      GnqHhwUsCD2UEbiQN767QzKGjHnMC7v3HaiQLDcS4WMOc0LGQYEJSTKGHxGHMQITkjYx4UdE
      ngxEyKW1VcqNEcFvnpQuZLlaxR+pVUcKP3lSupDXb9+iOzERhLd1SxVyaU3cgz8Js7iGa1yt
      W5qQB6e+KTdGGZ5dtzQhv1pbpV11xCmhNHDrliJkpb6Ff1b+glymLuPyhCEUallcWrwH1LY8
      v0bKo1Q+K9+EnWzgpXOb2KxY+OZuBrW9uIy3IjSkUMviysZ5XF1+9eAbyzeB59709FrhQq5s
      l/D15uLhv3OZOmZeeoDlH0ZxbyUl+u0IjTgmImNjEZi4AGQLfa8hXMjPy+4PLio+vYOJkzWs
      37dJzBDCRCzUsu6/sL4YvJCV+hZWdpa7/txONg7F/OZuBpsVS+TbEwoo1LL4+NvLmN2a6v2L
      HqukUCE/61IdO2H5ktq4uXRtz73wUCWFCVmpb7VlRy9QGzcPLhEZG4tAcQ6wu7R1CBTSa3Xs
      hNq4OfTNiV7os+MWIiRPdeyExkT64jkneqFPlRQyGPcroxM2JnpmclvYNQk+CrUs5kuXsPz5
      B2JkZGx13/gKqZAr2yURl2mD8qU6fOVEL6x/AZy64Poj30L2G/X4gfJl8BRqWdxc/JW/nNiP
      reWD24kubdt3yxbZrrvB8uVL5zZhJxvS3y+KsJy4/PkHcmVkLLtvgn1XSBntuht0G1I80ttz
      NzYWXXfbvoRc2S5Ja9e9oHwphvnSJby9/kIwFdGNrdKxQbkvIYNo192gfMmP0DGOH1zu3PjK
      kCqqYycsXz5/pqJ6KdojbYzDy8bxgsZdISv1LVTq3g9eymbi5ENMnHxI+dIFZTnRCx27bW4h
      daiObrA2fm9lFOv3h1UvRzlCbvfJZGu5bSbJLeTX//tCyHpkYCcbeP5MBc9M7kQ2X2qTE/ux
      WWoTkjtD/vRoU8RypMLyZZRuQ2qXE/vRkSO5KqRu+bEfURgTaZ0T++HIkVxC6pofexHmMZH2
      ObEfjhzJJ2SAd2dEE6ZjboVaFleXX8WVjfOql+IPR47kbtmmY/JtSKPbsxuOv9vmEtKEDY1X
      TMqXTESlt/tk4DgfObCQpm1ovGBCvgzkWJhKHm9sBhbyp5DJ6ETHfBm69twHKY9SMR0d8mXU
      RGQ77YGF/MHAkQ8vqvKl8WMcHh5vbAYW0uSRDw9B5ktjbvfJ4CGnkFGF5cv1+8P45m5G6LUj
      157d4K2QUUfkMTcS8TgkJCd+j7lFMif2onYw2x587BOiobhfnMfcbn+d8zQminRO9ABVSAHY
      yUbfMRG15z7wZsiw3aURiduYiEQcDKqQgukcE4X6dp8ESEjBxFtpJJvPYXzoZTz9LDAW/x32
      EEeylla9NCMYWMiMlaW27QITMdk8i3irXb49u4pH1i4S9RESsxt+TowT7cRbaaQaryHRfKrr
      7zRjjUMx7d0cTuzrd6JIB0hIH7CqONJ42fNrmrEGdlMPEN+3MLybQ6yp/kSRTgws5BOJXORb
      No+InTRO1LGdKSNZS1MbBwA7B4Aq5MDYzbMYbrxyLCfyQvmyHa5NDXZkLEVvvOREXihfHjF4
      y7aiNVMT0Z69wvJlJNt4rgCAt0JGgCBF7GTPrmLPrkZLTN6xTyaRE74W3RCdE3lhbTxZSyNR
      H1G6FunwbmomUwXRS9EGmTmRl2asgYcjW6hbu+EeE/kZjIftbo3K9uyVUI+J7CzdqQHMELGT
      UI6J7KMYyPU4vsnRorC1qCLRfAqZ/TeNkpHBxkTbmTL2T9RVL0cofEIanCPjrTTS+6/hif03
      lG9a/MLGRDupB2jGDP78nscjH4BTyHM5948F05l4K42RxivIPfo1ks2zqpcjFJYv9+yq6qXw
      kT3quNwZ0pSNTa9jYWHDyHxpZ9s+GoT7kc4m5Eg2xhlpvBx6GRnG5Uu7fa7NL6TGOdLZnnWa
      KQaJMfnSkR8BH0LqmCOdIpq4e5aB9vky295pfc0hdcqRutzu0xUt82VHfgR8frScDjky3krj
      if03kNp/jWTsg3b5MnvcH39CKsyRlBP5YflSeRufOB77fAl5Lnch8ONolBPFwaqlEjFd2jXg
      U0gg2LZtN88ae7tPV5S1cZd2DQgQMojdNuVE+QQ+JnJp14CA0z6TqYK03baJp3FMJ5Bjbl3a
      NSCgQgLAxSfnRFzmEMqJ6pGaL7tUR0CQkCLbdryVppyoCVLypZ1t+zjiToQICfiX0lkVKSfq
      hdB8mS0eng53Q5iQvG2b2rM5+L4NaWd7tmtAoJAZKztwlaQxjplw58tssetmhiFMSMB726Yx
      jvlw5cs+1REQ/Edek6kCJkeLXT/gncY44YPly0R9BMO7Pe7aeaiOgIS/OvzFk3NYudcuJIkY
      fh5Zu4cPNXCdXxa97TGEC9lZJelYWLRwfdrGqQueqiMgOEMyfjn5JuXECMOetrGdKaM5kvZc
      HQFJQmasLGZP/oaOhUWcZqyBR1PTPeeOnUgREgBePD2KU+noPueQAGJWHslTlwd7jaS1AADO
      nx6VeXlCc+ypdwd+jVQhT6UtqpIRJTF2ESdS0wO/TqqQADBTFPvZ0oT+xKw8khODterD1wpe
      yzFSVhyvT4f/IafEEfbUu4hZ41yvlS4kcNC6z5/292HnhBnwtmpGIEICtOuOAjErj2GOjUzb
      NQStxROUJ8NLzMpj5Nnf+r+OgLV4hvJkeElOXObOjU4CFRI4yJNnxoeDfltCIsmJy0iMzQi5
      VuBCAsBMIUN5MiQkxi4OfDemF0qEBIDXp3MkpeHEU9O+NzGdKBMSIClNJmblMSpgE3PsusKv
      OCAzRWrfpiFqR+16bSlXHYCUFadxkEEwGUXsqF2vL+WqA5Ky4njrhXGqlJojW0ZAEyGBo0pJ
      UupJEDICGgkJHA3OSUq9iKemkTr3e+kyApoJySAp9SE5cVnKbrobWgoJHEhJJ4TUkpy4LHTo
      7QVthQQOTgjRve/gYQdsg5YR0FxI4ODeN+3Ag4NtXlTICBjyedlss/PF2g6+XNtWvZzQoqoq
      OtG+QjqhFi4HlS26EyMqpBPWwr9c28HdBw9VL8d4EmMXhZ1lFIFxQgKPh+iFDH6Wt/GPUgXb
      exp/uKSmxKw87Kl3ff39iwyMFJJxKm3hrZ+PU7YcgJiVRyI/o0V7dsNoIRkvnh7FmXGb2ngf
      dGvPboRCSOCojZ8/PUpidpAYu4hEfka79uxGaIRkOMW8+6AW2VYes/KIp6aNEZEROiEZKSt+
      2MqjJCYTUffW3I3QCsnoFPM//30Yyl0526wkxi4aKSIj9EIymJgvnh7Fdr0RiqrJJIynpo1q
      y72IjJBOTJbT1GzolUgK6cRNTgDaCMoEPJGexpA1HkoJnUReSCdMTgDHBC1X69ioyv2A85iV
      x5A1jpiVj4yAnZCQPXAKChz8f7t+sCHaqNaxvdfETr3Rtkna7vg3cCAaY+jxhoN9L6ridWOo
      1Wq1VC+CIBj/BzUTRYQdNUZXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      eMIq4/AYiVAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      dK5p4+r4DDm98ORqqsKmpfNob6qUm2CHKnhdoGz0Ej/8m7/hrbNDpPVrRWn+CIu2PMUXP/so
      9aG5u/TPZl2g8WiSv/7Rexw6W/im2SsX1PFbv7qZJpv2GxD2snFhLAs9myWb07EUFa/Xj8+r
      omfTWJ4A3jm6/5vtwlg9g1M89w+H6B2a/fzgusoQ/+GZbaxYUGKzglzEhoWxslx+4wW+8uUv
      8/vffIHTEzlCwSC+94/4Uz/5XxwYsKGm91h7UyW/8dR6OlqqZ/XzbQ0V/PpT61k2v9bmmgm7
      FRSAzMU9PPfiKRZt66Q1d4I/+9pfcXo6c31L6OjAWUaLM7qgqBRFYWV7Pb/77Dae2LKYmkiQ
      j2vCKwpEQn4eXTef//gvt7FlecvNOweEoxQ2GrT7DPU7P89v/spqzMRm2p7/c7713Tf56pd2
      0hAo7Y9fURSaasr5jU9uYNuqVvYd72NgbIbx6STxVJZszsDr0SgLeKmtCNFSF+GBZfPYvLwZ
      TSa/lIzC5gQHgqSmr420VMvaePILv87Zrz/H3/64ki8+tcmWCs41TVVZs7Ce5W21jEUT7wcg
      R1bXrwegJhKioaoMn1eGPJSaggLQsHwd2g/3cvSJtWyIePHUrOTXvvhJ/uq5b/KVfUupTsXZ
      usOuqs4dRVHweTWa6yI010XmujrCRgVdq7XGB/n8r9Rx9t1LpKxrxbWu381X//irPNrmwVO7
      nAZZJl84WFH3BzD0DKbqL7luUOEORd8iSfP4bZmsLkSxSHeFcDUJgHA1CYBwNQmAcDUJgHA1
      CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmA
      cDUJgHC1ktq1wbJMYsMXOXzgHU72jKN7K1ix5VEe3riYsFeVpQjFXSupABjZNBdOnSS4bBdf
      +lQjaryP1149ytnaKjYtrpMAiLtWUgFQvQFWPbwbf+D9zbkjNcyrCJPO5ija4kbivlZaAVBV
      AoEAYGGZJpO95+lLmqxrqEYFbrXGVxHX/hIlrqQCAIBlkolP0HPyIAcvQedTu2iv9qEAhmmS
      y+Wuv9QwDNLp9C/sIC/EB0osABbp6CBdh48wTDNPP7uRat+HB7em3bhTvKZpBAIBQqHQXFRW
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
